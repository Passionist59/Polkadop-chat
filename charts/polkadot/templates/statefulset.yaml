apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    node: {{ .Release.Name }}
    app: {{ .Chart.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      node: {{ .Release.Name }}
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        node: {{ .Release.Name }}
        app: {{ .Chart.Name }}
    spec:
      serviceAccount: {{ include "polkadot-deployer.serviceAccount" . }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
{{ toYaml .Values.dnsNameservers | indent 8 -}}
      {{- if .Values.chainspec.custom }}
      initContainers:
      - name: {{ .Release.Name }}-init
        image: {{ .Values.initImage.repo }}:{{ .Values.initImage.tag }}
        command:
        - /app/merge_chainspec.sh
        - /app/custom_chainspec.json
        - {{ .Values.chainspec.path }}
        volumeMounts:
        - name: chainspec
          mountPath: /chainspec
        - name: custom-chainspec
          mountPath: /app/custom_chainspec.json
          subPath: custom_chainspec.json
        securityContext:
          allowPrivilegeEscalation: false
      {{- end }}
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
        - -c
        - exec /usr/local/bin/substrate
          --chain={{ .Values.chainspec.path }}
          --name={{ .Values.name }}
          -d=/data
          --rpc-external
          --ws-external
          --port {{ .Values.p2pPort }}
          --key=$(cat /etc/polkadot/session-key)
          --node-key=$(cat /etc/polkadot/node-key)
          {{ include "polkadot-deployer.bootnodes" . }}
        {{- if .Values.validator }}
          --validator
        {{- end }}
        ports:
        - containerPort: {{ .Values.p2pPort }}
          name: p2p
        - containerPort: 9933
          name: http-rpc
        - containerPort: 9944
          name: websocket-rpc
        readinessProbe:
          httpGet:
            path: /health
            port: http-rpc
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http-rpc
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /data
        - name: chainspec
          mountPath: /chainspec
        - name: session-key
          mountPath: /etc/polkadot/session-key
          subPath: session-key
        - name: node-key
          mountPath: /etc/polkadot/node-key
          subPath: node-key
        securityContext:
          allowPrivilegeEscalation: false
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: session-key
        secret:
          secretName: {{ include "polkadot-deployer.sessionKey" . }}
          defaultMode: 256
          items:
          - key: session-key
            path: session-key
      - name: node-key
        secret:
          secretName: {{ include "polkadot-deployer.nodeKey" . }}
          defaultMode: 256
          items:
          - key: node-key
            path: node-key
      - name: custom-chainspec
        configMap:
          name: {{ include "polkadot-deployer.custom-chainspec-configmap" . }}
      {{- if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
      - name: chainspec
        emptyDir: {}
      {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: {{ .Values.persistence.accessModes }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.persistence.dataSize }}
  - metadata:
      name: chainspec
    spec:
      accessModes: {{ .Values.persistence.accessModes }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.persistence.chainspecSize }}
      {{ end }}
